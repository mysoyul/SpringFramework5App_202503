<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- AOP 설정 -->
	<aop:config>
		<!-- Aspect = Advice + PointCut -->
		<aop:aspect id="traceAspect" ref="performanceTraceAdvice">
<!-- 			<aop:around pointcut="execution(public * myspring.user..*(..))" -->
<!-- 				method="trace" />				 -->
			<aop:around 
				pointcut="execution(public * myspring.user..*(..))||execution(public * myspring.student..*(..))"
 				method="trace" />		
		</aop:aspect>
	</aop:config>

	<!-- Advice 클래스를 Bean으로 등록 -->
	<bean id="performanceTraceAdvice" 
		class="myspring.aop.xml.PerformanceTraceAdvice" />
	
	<!-- ComponentScanning Service와 DAO 만 스캐닝하고, Controller는 포함하지 않음 -->	
	<context:component-scan base-package="myspring.user,myspring.student">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- properties file 정보 설정 -->
	<context:property-placeholder location="classpath:values.properties" />

	<!-- HikariDataSource 클래스를 SpringBean으로 설정 -->
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource"
		p:driverClassName="${db.driverClass}"
		p:jdbcUrl="${db.url}"
		p:username="${db.username}"
		p:password="${db.password}"
	 />
	 
	<!-- SqlSessionFactoryBean 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- setDataSource(DataSource) -->
		<property name="dataSource" ref="dataSource" />
		<!-- setConfigLocation(Resource) -->
		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml" />
		<!-- setMapperLocations(Resource...) -->
		<property name="mapperLocations">
			<list>
				<value>classpath:mybatis/*Mapper.xml</value>
<!-- 				<value>classpath:StudentMapper.xml</value> -->
			</list>
		</property>
	</bean>
	<!-- SqlSessionTemplate 설정 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 기본생성자가 없기 때문에 Constructor Injection 방식을 반드시 사용해야 함 -->
		<!-- SqlSessionTemplate(SqlSessionFactory) 생성자만 있음-->
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	<!-- MapperScannerConfigurer 설정 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="myspring.**.dao.mapper"/>
		<property name="sqlSessionTemplateBeanName" value="sqlSession" /> 
	</bean>
	

</beans>
